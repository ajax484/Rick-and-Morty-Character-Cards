{"version":3,"sources":["Components/Card/Card.js","Components/Card/CardList.js","Components/Pagination/Pagination.js","Components/Filter/FilterBTN.js","Components/Filter/category/Gender.js","Components/Filter/category/Species.js","Components/Filter/category/Status.js","Components/Filter/Filter.js","Components/Search/Search.js","App.js","index.js"],"names":["Card","char","console","log","url","status","useState","flip","setFlip","episodeName","setEpisodeName","episode","axios","get","then","res","data","name","className","onClick","prevFlip","src","image","alt","origin","species","gender","CardList","display","results","map","key","id","Pagination","pageNumber","info","updatePageNumber","window","innerWidth","width","setWidth","updateDimensions","useEffect","addEventListener","removeEventListener","jsx","nextLabel","previousLabel","previousClassName","nextClassName","activeClassName","pageClassName","pageLinkClassName","forcePage","marginPagesDisplayed","pageRangeDisplayed","pageCount","pages","onPageChange","selected","FilterBTN","input","task","index","type","x","for","Gender","updateGender","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","items","Species","updateSpecies","item","Status","updateStatus","Filter","style","cursor","color","location","reload","Search","setSearch","searchEl","useRef","placeholder","ref","e","preventDefault","current","value","App","search","fetchedData","updateFetchedData","api","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29c37903.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Card = ({ char }) => {\r\n    console.log(char);\r\n    const [flip, setFlip] = useState(false);\r\n    const [episodeName, setEpisodeName] = useState('undefined');\r\n\r\n    const charStatus = (status) => {\r\n        if (status === \"Dead\") {\r\n            return (\r\n                <div className={`position-absolute badge bg-danger`}>\r\n                    {status}\r\n                </div>\r\n            );\r\n        } else if (status === \"Alive\") {\r\n            return (\r\n                <div className={`position-absolute badge bg-success`}>\r\n                    {status}\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div\r\n                    className={`position-absolute badge bg-secondary`}\r\n                >\r\n                    {status}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    const getEpisodeName = (url) => {\r\n        axios\r\n            .get(...url)\r\n            .then((res) => {\r\n                console.log(res.data.name)\r\n                setEpisodeName(res.data.name)\r\n            })\r\n    }\r\n\r\n    getEpisodeName(char.episode);\r\n    console.log(episodeName);\r\n\r\n    return (\r\n        <div\r\n            className={`flippable-card ${flip ? \"flip\" : \"\"}`}\r\n            onClick={() => setFlip((prevFlip) => !prevFlip)}\r\n        >\r\n            <div className=\"card mb-2 p-0 char-card d-flex flex-column justify-content-center front\">\r\n                {charStatus(char.status)}\r\n                <img className=\"card-img-top img\" src={char.image} alt={char.name} />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title fs-5 fw-bold mb-4\">{char.name}</h5>\r\n                    <div className=\"card-text\">\r\n                        <p className=\"fs-6 fw-normal\">Last Location</p>\r\n                        <p className=\"fs-5\">{char.origin.name}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card mb-2 char-card p-1 d-flex flex-column justify-content-center back\">\r\n                <div className=\"card-body p-2\">\r\n                    <h5 className=\"card-title fs-5 fw-bold mb-4\">{char.name}</h5>\r\n                    <div className=\"card-text\">\r\n                        <p className=\"fs-5 fw-normal mb-1\">Species:</p>\r\n                        <p className=\"fs-6 fw-light\">{char.species}</p>\r\n                        <p className=\"fs-5 fw-normal mb-1\">Gender:</p>\r\n                        <p className=\"fs-6 fw-light\">{char.gender}</p>\r\n                        <p className=\"fs-5 fw-normal mb-1\">First Appearance:</p>\r\n                        <p className=\"fs-6 fw-light\">{episodeName}</p>\r\n                        <p className=\"fs-5 fw-normal mb-1\">Origin:</p>\r\n                        <p className=\"fs-6 fw-light\">{char.origin.name}</p>\r\n                        <p className=\"fs-5 fw-normal mb-1\">Current location:</p>\r\n                        <p className=\"fs-6 fw-light\">{char.origin.name}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport './card.css';\r\n\r\nconst CardList = ({ results }) => {\r\n    let display;\r\n\r\n    if (results) {\r\n        display = results.map((char) => {\r\n            return (\r\n                <div key={char.id} className=\"col-md-4\">\r\n                    <Card char={char} />\r\n                </div>\r\n            );\r\n        });\r\n    } else {\r\n        display = <p>No results to display</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-lg-9 col-12\">\r\n            <div className=\"row gy-3\">\r\n                {display}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst Pagination = ({ pageNumber, info, updatePageNumber }) => {\r\n    const [width, setWidth] = useState(window.innerWidth);\r\n\r\n    const updateDimensions = () => {\r\n        setWidth(window.innerWidth);\r\n    };\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", updateDimensions);\r\n        return () => window.removeEventListener(\"resize\", updateDimensions);\r\n    }, []);\r\n    \r\n    let pageChange = (data) => {\r\n        updatePageNumber(data.selected + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <style jsx>\r\n                {`\r\n                    a {\r\n                        color: white; text-decoration: none;\r\n                    }\r\n\r\n                    @media (max-width: 768px) {\r\n                        .pagination {font-size: 12px}\r\n\r\n                        .next,\r\n                        .prev {display: none}\r\n                    }\r\n\r\n                    @media (max-width: 768px) {\r\n                        .pagination {font-size: 14px}\r\n                    }\r\n                `}\r\n            </style>\r\n\r\n            <ReactPaginate\r\n                className=\"pagination justify-content-center my-4 gap-4\"\r\n                nextLabel=\"Next\"\r\n                previousLabel=\"Prev\"\r\n                previousClassName=\"btn btn-primary fs-5 prev\"\r\n                nextClassName=\"btn btn-primary fs-5 next\"\r\n                activeClassName=\"active\"\r\n                pageClassName=\"page-item\"\r\n                pageLinkClassName=\"page-link\"\r\n                forcePage={pageNumber === 1 ? 0 : pageNumber - 1}\r\n                marginPagesDisplayed={width < 576 ? 1 : 2}\r\n                pageRangeDisplayed={width < 576 ? 1 : 2}\r\n                pageCount={info?.pages}\r\n                onPageChange={pageChange}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Pagination;\r\n","import React from 'react';\r\n\r\nconst FilterBTN = ({ input, task, updatePageNumber, index, name }) => {\r\n    return (\r\n        <>\r\n            <style jsx>\r\n                {`\r\n                    .x:checked + label {\r\n                    background-color: #0b5ed7;\r\n                    color: white }\r\n                    input[type=\"radio\"] { display: none; }\r\n                `}\r\n            </style>\r\n\r\n            <div className=\"form-check\">\r\n                <input\r\n                    className=\"form-check-input x\" type=\"radio\"\r\n                    name={name} id={`${name}-${index}`}\r\n                />\r\n                <label\r\n                    onClick={(x) => {\r\n                        task(input); updatePageNumber(1);\r\n                    }}\r\n                    className=\"btn btn-outline-primary\"\r\n                    for={`${name}-${index}`}\r\n                > {input} </label>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilterBTN;\r\n","import React from 'react';\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Gender = ({ updateGender, updatePageNumber }) => {\r\n    let genders = [\"female\", \"male\", \"genderless\", \"unknown\"];\r\n    return (\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button\r\n                    className=\"accordion-button collapsed\" type=\"button\"\r\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\"\r\n                    aria-expanded=\"false\" aria-controls=\"collapseThree\"\r\n                > Gender </button>\r\n            </h2>\r\n            <div id=\"collapseThree\" className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\"\r\n            >\r\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n                    {genders.map((items, index) => {\r\n                        return (\r\n                            <FilterBTN\r\n                                name=\"gender\" index={index} key={index}\r\n                                updatePageNumber={updatePageNumber}\r\n                                task={updateGender} input={items}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gender;\r\n","import React from 'react';\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Species = ({ updateSpecies, updatePageNumber }) => {\r\n    let species = [\r\n        \"Human\", \"Alien\", \"Humanoid\",\r\n        \"Poopybutthole\", \"Mythological\", \"Unknown\",\r\n        \"Animal\", \"Disease\", \"Robot\", \"Cronenberg\", \"Planet\",\r\n    ];\r\n\r\n    return (\r\n        <div className=\"accordion-item \">\r\n            <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button\r\n                    className=\"accordion-button collapsed\" type=\"button\"\r\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\"\r\n                    aria-expanded=\"false\" aria-controls=\"collapseTwo\"\r\n                > Species </button>\r\n            </h2>\r\n            <div\r\n                id=\"collapseTwo\" className=\"accordion-collapse collapse\"\r\n                aria-labelledby=\"headingTwo\"\r\n                data-bs-parent=\"#accordionExample\"\r\n            >\r\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n                    {species.map((item, index) => {\r\n                        return (\r\n                            <FilterBTN\r\n                                name=\"species\" index={index} key={index}\r\n                                updatePageNumber={updatePageNumber}\r\n                                task={updateSpecies} input={item}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Species;\r\n","import React from 'react';\r\nimport FilterBTN from \"../FilterBTN\";\r\n\r\nconst Status = ({ updateStatus, updatePageNumber }) => {\r\n    let status = [\"Alive\", \"Dead\", \"Unknown\"];\r\n    return (\r\n        <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button\r\n                    className=\"accordion-button\" type=\"button\"\r\n                    data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\"\r\n                    aria-expanded=\"true\" aria-controls=\"collapseOne\"\r\n                > Status </button>\r\n            </h2>\r\n            <div\r\n                id=\"collapseOne\" className=\"accordion-collapse collapse show\"\r\n                aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\"\r\n            >\r\n                <div className=\"accordion-body d-flex flex-wrap gap-3\">\r\n                    {status.map((item, index) => (\r\n                        <FilterBTN\r\n                            key={index}\r\n                            index={index}\r\n                            name=\"status\"\r\n                            task={updateStatus}\r\n                            updatePageNumber={updatePageNumber}\r\n                            input={item}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Status;\r\n","import React from 'react';\r\nimport Gender from './category/Gender';\r\nimport Species from './category/Species';\r\nimport Status from './category/Status';\r\nimport './filter.css';\r\n\r\nconst Filter = ({ pageNumber, updatePageNumber,\r\n    updateStatus, updateGender,\r\n    updateSpecies,\r\n}) => {\r\n    let clear = () => {\r\n        updateStatus(\"\");\r\n        updateGender(\"\");\r\n        updateSpecies(\"\");\r\n        updatePageNumber(1);\r\n        window.location.reload(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-lg-3 col-12 mb-5\">\r\n            <div className=\"text-center fw-bold fs-4 mb-2\">Filters</div>\r\n            <div\r\n                style={{ cursor: \"pointer\", color: \"var(--white)\" }} onClick={clear}\r\n                className=\"text-decoration-underline text-center mb-3\"\r\n            > Clear Filters </div>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <Status\r\n                    updatePageNumber={updatePageNumber}\r\n                    updateStatus={updateStatus}\r\n                />\r\n                <Species\r\n                    updatePageNumber={updatePageNumber}\r\n                    updateSpecies={updateSpecies}\r\n                />\r\n                <Gender\r\n                    updatePageNumber={updatePageNumber}\r\n                    updateGender={updateGender}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useRef } from 'react';\r\nimport './search.css';\r\n\r\nconst Search = ({ setSearch, updatePageNumber }) => {\r\n    const searchEl = useRef();\r\n    let searchBtn = (e) => {\r\n        e.preventDefault();\r\n        updatePageNumber(1);\r\n        setSearch(searchEl.current.value);\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className={`search d-flex flex-sm-row flex-column align-items-center justify-content-center gap-4 mb-5`}\r\n        >\r\n            <input\r\n                placeholder=\"Search for characters\"\r\n                className=\"input\"\r\n                type=\"text\"\r\n                ref={searchEl}\r\n            />\r\n            <button\r\n                onClick={searchBtn}\r\n                className=\"btn btn-primary fs-5\"\r\n            >\r\n                Search\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport './app.css';\r\nimport CardList from './Components/Card/CardList';\r\nimport Pagination from './Components/Pagination/Pagination';\r\nimport Filter from './Components/Filter/Filter';\r\nimport Search from './Components/Search/Search';\r\n\r\nexport default function App() {\r\n    let [pageNumber, updatePageNumber] = useState(1);\r\n    let [search, setSearch] = useState(\"\");\r\n    let [status, updateStatus] = useState(\"\");\r\n    let [gender, updateGender] = useState(\"\");\r\n    let [species, updateSpecies] = useState(\"\");\r\n    const [fetchedData, updateFetchedData] = useState([]);\r\n\r\n    let api = `https://rickandmortyapi.com/api/character/?page=${pageNumber}&name=${search}&status=${status}&gender=${gender}&species=${species}`;\r\n    let { info, results } = fetchedData;\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(api)\r\n            .then((res) => {\r\n                updateFetchedData(res.data);\r\n            });\r\n    }, [api])\r\n\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1 className=\"text-center mb-3 header-text p-3 fs-3\"><span className=\"brand fs-1\">Rick And Morty</span> Character Cards</h1>\r\n            <Search setSearch={setSearch} updatePageNumber={updatePageNumber} />\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Filter\r\n                        pageNumber={pageNumber}\r\n                        status={status}\r\n                        updateStatus={updateStatus}\r\n                        updateGender={updateGender}\r\n                        updateSpecies={updateSpecies}\r\n                        updatePageNumber={updatePageNumber}\r\n                    />\r\n                    <CardList results={results} />\r\n                </div>\r\n                <Pagination\r\n                    info={info}\r\n                    pageNumber={pageNumber}\r\n                    updatePageNumber={updatePageNumber}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}